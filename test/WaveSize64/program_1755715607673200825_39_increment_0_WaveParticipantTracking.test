#--- source.hlsl
RWStructuredBuffer<uint> _participant_check_sum : register(u1);

[numthreads(64, 1, 1)]
void main(uint3 tid : SV_DispatchThreadID) {
  _participant_check_sum[tid.x] = 0;
  uint result = 0;
  if ((WaveGetLaneIndex() == 43)) {
    for (uint i0 = 0; (i0 < 2); i0 = (i0 + 1)) {
      if (((WaveGetLaneIndex() < 9) || (WaveGetLaneIndex() >= 49))) {
        result = (result + WaveActiveMax(result));
        uint _participantCount = WaveActiveSum(1);
        bool _isCorrect = (_participantCount == 0);
        _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
      }
      if (((WaveGetLaneIndex() < 21) || (WaveGetLaneIndex() >= 53))) {
        result = (result + WaveActiveMax(result));
        uint _participantCount = WaveActiveSum(1);
        bool _isCorrect = (_participantCount == 0);
        _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
      }
      if ((i0 == 1)) {
        break;
      }
    }
    if ((WaveGetLaneIndex() == 11)) {
      result = (result + WaveActiveMax(result));
      uint _participantCount = WaveActiveSum(1);
      bool _isCorrect = (_participantCount == 0);
      _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
    }
  } else {
  if (((((WaveGetLaneIndex() == 8) || (WaveGetLaneIndex() == 36)) || (WaveGetLaneIndex() == 59)) || (WaveGetLaneIndex() == 44))) {
    result = (result + WaveActiveMin(3));
    uint _participantCount = WaveActiveSum(1);
    bool _isCorrect = (_participantCount == 4);
    _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
  }
  switch ((WaveGetLaneIndex() % 3)) {
  case 0: {
      for (uint i1 = 0; (i1 < 2); i1 = (i1 + 1)) {
        if ((((WaveGetLaneIndex() == 3) || (WaveGetLaneIndex() == 50)) || (WaveGetLaneIndex() == 25))) {
          result = (result + WaveActiveMin((WaveGetLaneIndex() + 1)));
          uint _participantCount = WaveActiveSum(1);
          bool _isCorrect = (_participantCount == 1);
          _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
        }
        for (uint i2 = 0; (i2 < 2); i2 = (i2 + 1)) {
          if ((WaveGetLaneIndex() < 32)) {
            result = (result + WaveActiveSum(6));
            uint _participantCount = WaveActiveSum(1);
            bool _isCorrect = (_participantCount == 11);
            _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
          }
          if ((i2 == 1)) {
            break;
          }
        }
        if ((((WaveGetLaneIndex() == 15) || (WaveGetLaneIndex() == 54)) || (WaveGetLaneIndex() == 11))) {
          result = (result + WaveActiveSum((WaveGetLaneIndex() + 1)));
          uint _participantCount = WaveActiveSum(1);
          bool _isCorrect = (_participantCount == 2);
          _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
        }
      }
      break;
    }
  case 1: {
      if ((WaveGetLaneIndex() < 19)) {
        if ((WaveGetLaneIndex() < 26)) {
          result = (result + WaveActiveSum(result));
          uint _participantCount = WaveActiveSum(1);
          bool _isCorrect = (_participantCount == 6);
          _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
        }
      }
      break;
    }
  case 2: {
      if (true) {
        result = (result + WaveActiveSum(3));
        uint _participantCount = WaveActiveSum(1);
        bool _isCorrect = (_participantCount == 21);
        _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
      }
      break;
    }
  default: {
      result = (result + WaveActiveSum(99));
      uint _participantCount = WaveActiveSum(1);
      bool _isCorrect = (_participantCount == 0);
      _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
      break;
    }
  }
  if ((((((WaveGetLaneIndex() == 10) || (WaveGetLaneIndex() == 16)) || (WaveGetLaneIndex() == 37)) || (WaveGetLaneIndex() == 62)) || (WaveGetLaneIndex() == 9))) {
    result = (result + WaveActiveMin((WaveGetLaneIndex() + 1)));
    uint _participantCount = WaveActiveSum(1);
    bool _isCorrect = (_participantCount == 5);
    _participant_check_sum[tid.x] = (_participant_check_sum[tid.x] + (_isCorrect ? 1 : 0));
  }
  }
}

#--- pipeline.yaml
---
Shaders:
  - Stage: Compute
    Entry: main
    DispatchSize: [1, 1, 1]  # Single dispatch for 64 threads
Buffers:
  - Name: _participant_check_sum
    Format: UInt32
    Stride: 4
    Fill: 0
    Size: 64
  - Name: expected_participants
    Format: UInt32
    Stride: 4
    Data: [4, 1, 1, 6, 1, 1, 4, 1, 2, 5, 2, 1, 4, 1, 1, 6, 2, 1, 4, 0, 1, 4, 0, 1, 4, 0, 1, 4, 0, 1, 4, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 0, 1, 0, 0, 2, 0, 0, 2, 0]
Results:
  - Result: WaveOpValidation
    Rule: BufferExact
    Actual: _participant_check_sum
    Expected: expected_participants
DescriptorSets:
  - Resources:
    - Name: _participant_check_sum
      Kind: RWStructuredBuffer
      DirectXBinding:
        Register: 1
        Space: 0
      VulkanBinding:
        Binding: 1
...
#--- end

# RUN: split-file %s %t
# RUN: %dxc_target -T cs_6_0 -Fo %t.o %t/source.hlsl
# RUN: %offloader %t/pipeline.yaml %t.o
